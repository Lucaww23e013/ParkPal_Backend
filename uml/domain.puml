@startuml
'https://plantuml.com/class-diagram

hide empty methods

entity User {
    - userID: String
    - salutation: String
    - username: String
    - firstName: String
    - lastName: String
    - email: String
    - password: String
    - country: Country
    - isAdmin: Boolean
    - joinedEvents: List<Event>
    - profilePicture: Picture
}

enum GenderCategory {
    OTHER
    FEMALE
    MALE
}

entity Event {
    - eventID: String
    - title: String
    - description: String
    - startTS: LocalDateTime
    - endTS: LocalDateTime
    - park: Park
    - creator: User
    - joinedUsers: List<User>
    - eventTags: List<EventTag>
    - eventMedia: List<Media>
}

entity EventTag {
    - eventTagID: String
    - name: String
}

enum VideoFormatType {
    MP4
    WMV
}

enum PictureFormatType {
    JPG
    PNG
    GIF
}

abstract class Media {
    - mediaID: String
    - uploader: User
    - fileName: String
    - uploaded: LocalDateTime
    - fileSize: Long
    - data: byte[]
}

entity Video {
    - duration: Long
    - formatType: VideoFormatType
}

entity Picture {
    - formatType: PictureFormatType

}

entity Park {
    - parkID: String
    - name: String
    - description: String
    - parkAddress: Address
    - parkEvents: List<Event>
    - parkMedia: List<Media>
}

class Address <<(V, #FF7700) value-object>> {
    - streetNumber: String
    - zipCode: String
    - city: String
    - country: Country
}

entity Country {
    - name: String
    - iso2Code: String
}

User "1..1" -- Event : created by
Event --right> "1..n" Park : has <
Event -left- "n..m" User : joined By
EventTag "n..m" --* Event : has <
Media "n..m" <-- Event
User -- "1..n" Media : User create Media
Park "1..n" -- Media
User -- Country
Address - Country
Park -right> "0..1" Address
User -> Picture
Video --|> Media
Picture --|> Media
User -left> GenderCategory
Video -> VideoFormatType
Picture -left> PictureFormatType
@enduml

