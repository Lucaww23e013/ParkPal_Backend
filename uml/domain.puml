@startuml
'https://plantuml.com/class-diagram

hide empty methods
'hide EventTag

entity User {
    - gender : Gender
    - salutation: String
    - username: String
    - firstName: String
    - lastName: String
    - email: String
    - password: String
    - country: Country
    - role: Role
    - joinedEvents: List<Event>
    - profilePicture: Picture
}

enum Gender {
    OTHER
    FEMALE
    MALE
}

enum UserRole {
    USER
    ADMIN
}

entity Event {
    - title: String
    - description: String
    - startTS: LocalDateTime
    - endTS: LocalDateTime
    - park: Park
    - creator: User
    - joinedUsers: List<User>
    - tags: Set<EventTag>
    - pictures: List<Picture>
    - videos: List<Videos>
}

enum EventTag {
    name: string
    events: Set<Event>
}

entity Picture {
    - user: User
    - LocalDateTime: uploadDate
    - byte[]: file
}

entity Video {
    - user: User
    - LocalDateTime: uploadDate
    - byte[]: file
}

entity Park {
    - name: String
    - description: String
    - parkAddress: Address
    - parkEvents: List<Event>
    - parkPictures: List<Picture>
    - parkVideos: List<Video>
}

class Address <<(V, #FF7700) value-object>> {
    - streetNumber: String
    - zipCode: String
    - city: String
    - country: Country
}

entity Country {
    - name: String
    - iso2Code: String
}

User "1..1" <-left- Event : created by
User -left- "n..m" Event : joined By
'Event "1..1" --> User : created by
Event --> "1..n" Park : has <
'Event --- "n..m" User : joined By
Event "n..1" --* EventTag : has >
'EventTag "n..1" --* Event : has <
'Picture "n..m" <-- Event
Event "n..m" --> Picture
'Video "n..m" <-- Event
Event "n..m" --> Video
User -- "1..n" Picture  : User create Picture
Park "1..n" -up-> Picture
User -- "1..n" Video  : User create Video
Park "1..n" -up-> Video
User -> Country
Address -right-> Country
Park -> "0..1" Address
User -up-> Gender
User -up-> UserRole


@enduml
